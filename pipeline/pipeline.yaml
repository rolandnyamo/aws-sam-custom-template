AWSTemplateFormatVersion: 2010-09-09
Description: >

  This template creates a 2-pipleine/build environemts:
    Dev:
      - Pipeline
      - 1 Build env that deploys dev resources (needs manual approval)
      - Linked to "dev" github branch
    Prod:
      - Pipeline
      - 1 Build env that deploys dev resources (needs manual approval)
      - Linked to "main" github branch

Parameters:
  GithubRepo:
    Description: Gitub Repository name
    Type: AWS::SSM::Parameter::Value<String>
    Default: /service/<pipeline_repo_name>/github/repo

  GithubToken:
    Description: Github OAuth Token with full permissions on admin:repo_hook and repo
    Type: AWS::SSM::Parameter::Value<String>
    NoEcho: true
    Default: /service/<pipeline_repo_name>/github/token

  GithubUser:
    Description: Github user where the repository lives
    Type: AWS::SSM::Parameter::Value<String>
    Default: /service/<pipeline_repo_name>/github/user

Resources:

  # CodeBuild project and resources (S3 Bucket for build artifacts, Role, Project)

  BuildArtifactsBucketDev:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: "Stack"
          Value: !Ref AWS::StackName
        - Key: "Project"
          Value: <app_name>-dev
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain

  BuildArtifactsBucketProd:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: "Stack"
          Value: !Ref AWS::StackName
        - Key: "Project"
          Value: <app_name>-prod
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain

  ########  ##     ## #### ##       ########
  ##     ## ##     ##  ##  ##       ##     ##
  ##     ## ##     ##  ##  ##       ##     ##
  ########  ##     ##  ##  ##       ##     ##
  ##     ## ##     ##  ##  ##       ##     ##
  ##     ## ##     ##  ##  ##       ##     ##
  ########   #######  #### ######## ########

  CodeBuildProjectDev:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: <app_name>-dev
      Description: Dev Build project for the <app_name>
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        # Image: aws/codebuild/python:3.6.5 # More info on Images: https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0 # More info on Images: https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html
        EnvironmentVariables:
          - Name: BUILD_OUTPUT_BUCKET
            Value: !Ref BuildArtifactsBucketDev
      Cache:
        Type: S3
        Location: !Sub ${BuildArtifactsBucketDev}/codebuild-cache
      ServiceRole: !GetAtt CodeBuildServiceRoleDev.Arn
      Source:
        Type: CODEPIPELINE
      Tags:
        - Key: "Stack"
          Value: !Ref AWS::StackName
        - Key: "Project"
          Value: <app_name>
        - Key: "Env"
          Value: Dev

  CodeBuildProjectProd:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: <app_name>-prod
      Description: Build project for the <app_name>
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        # Image: aws/codebuild/python:3.6.5 # More info on Images: https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0 # More info on Images: https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html
        EnvironmentVariables:
          - Name: BUILD_OUTPUT_BUCKET
            Value: !Ref BuildArtifactsBucketProd
      Cache:
        Type: S3
        Location: !Sub ${BuildArtifactsBucketProd}/codebuild-cache
      ServiceRole: !GetAtt CodeBuildServiceRoleProd.Arn
      Source:
        Type: CODEPIPELINE
      Tags:
        - Key: "Stack"
          Value: !Ref AWS::StackName
        - Key: "Project"
          Value: <app_name>
        - Key: "Env"
          Value: Prod

  ########  #### ########  ######## ##       #### ##    ## ########
  ##     ##  ##  ##     ## ##       ##        ##  ###   ## ##
  ##     ##  ##  ##     ## ##       ##        ##  ####  ## ##
  ########   ##  ########  ######   ##        ##  ## ## ## ######
  ##         ##  ##        ##       ##        ##  ##  #### ##
  ##         ##  ##        ##       ##        ##  ##   ### ##
  ##        #### ##        ######## ######## #### ##    ## ########

  PipelineDev:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref BuildArtifactsBucketDev
        Type: S3
      Name: <app_name>-Dev
      RoleArn: !GetAtt CodePipelineExecutionRoleDev.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceCodeRepo
              ActionTypeId:
                # More info on Possible Values: https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              Configuration:
                Owner: !Ref GithubUser
                Repo: !Ref GithubRepo
                Branch: dev
                OAuthToken: !Ref GithubToken
              OutputArtifacts:
                - Name: SourceCodeAsZip
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CodeBuildProjectDev
              InputArtifacts:
                - Name: SourceCodeAsZip
              OutputArtifacts:
                - Name: BuildArtifactAsZip
        - Name: Dev
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CloudFormationExecutionRoleDev.Arn
                StackName: <app_name>-Dev
                ChangeSetName: <app_name>-ChangeSet-Dev
                TemplatePath: BuildArtifactAsZip::template-export.yml
                Capabilities: CAPABILITY_IAM

                # Remove if there's no params files
                ParameterOverrides: |
                  {
                      "MyEnvironment": {
                          "Fn::GetParam": [
                              "BuildArtifactAsZip",
                              "stage_vars.json",
                              "dev"
                          ]
                      },
                      "ApiQuotaLimit": {
                          "Fn::GetParam": [
                              "BuildArtifactAsZip",
                              "template_vars.json",
                              "apigw_dev_quota_limit"
                          ]
                      },
                      "ApiQuotaPeriod": {
                          "Fn::GetParam": [
                              "BuildArtifactAsZip",
                              "template_vars.json",
                              "apigw_dev_quota_period"
                          ]        
                      },
                      "ApiThrottleBurstLimit": {
                          "Fn::GetParam": [
                              "BuildArtifactAsZip",
                              "template_vars.json",
                              "apigw_dev_throttle_burst_limit"
                          ]        
                      },
                      "ApiThrottleRateLimit": {
                          "Fn::GetParam": [
                              "BuildArtifactAsZip",
                              "template_vars.json",
                              "apigw_dev_throttle_rate_limit"
                          ]        
                      }
                  }
              InputArtifacts:
                - Name: BuildArtifactAsZip
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt CloudFormationExecutionRoleDev.Arn
                StackName: <app_name>-Dev
                ChangeSetName: <app_name>-ChangeSet-Dev
              OutputArtifacts:
                - Name: <app_name>DevChangeSet
              RunOrder: 2

  PipelineProd:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref BuildArtifactsBucketProd
        Type: S3
      Name: <app_name>-prod
      RoleArn: !GetAtt CodePipelineExecutionRoleProd.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceCodeRepo
              ActionTypeId:
                # More info on Possible Values: https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              Configuration:
                Owner: !Ref GithubUser
                Repo: !Ref GithubRepo
                Branch: main
                OAuthToken: !Ref GithubToken
              OutputArtifacts:
                - Name: SourceCodeAsZip
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CodeBuildProjectProd
              InputArtifacts:
                - Name: SourceCodeAsZip
              OutputArtifacts:
                - Name: BuildArtifactAsZip
        - Name: Prod
          Actions:
            # Remove if no approval is needed
            - Name: DeploymentApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: "1"
              RunOrder: 2
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CloudFormationExecutionRoleProd.Arn
                StackName: <app_name>-Prod
                ChangeSetName: <app_name>-ChangeSet-Prod
                TemplatePath: BuildArtifactAsZip::template-export.yml
                Capabilities: CAPABILITY_IAM

                # Remove if there's no params files
                ParameterOverrides: |
                  {
                      "MyEnvironment": {
                          "Fn::GetParam": [
                              "BuildArtifactAsZip",
                              "stage_vars.json",
                              "prod"
                          ]
                      },
                      "ApiQuotaLimit": {
                          "Fn::GetParam": [
                              "BuildArtifactAsZip",
                              "template_vars.json",
                              "apigw_prod_quota_limit"
                          ]
                      },
                      "ApiQuotaPeriod": {
                          "Fn::GetParam": [
                              "BuildArtifactAsZip",
                              "template_vars.json",
                              "apigw_prod_quota_period"
                          ]        
                      },
                      "ApiThrottleBurstLimit": {
                          "Fn::GetParam": [
                              "BuildArtifactAsZip",
                              "template_vars.json",
                              "apigw_prod_throttle_burst_limit"
                          ]        
                      },
                      "ApiThrottleRateLimit": {
                          "Fn::GetParam": [
                              "BuildArtifactAsZip",
                              "template_vars.json",
                              "apigw_prod_throttle_rate_limit"
                          ]        
                      }
                  }
              InputArtifacts:
                - Name: BuildArtifactAsZip
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt CloudFormationExecutionRoleProd.Arn
                StackName: <app_name>-Prod
                ChangeSetName: <app_name>-ChangeSet-Prod
              OutputArtifacts:
                - Name: <app_name>ProdChangeSet
              RunOrder: 3

  ####    ###    ##     ##
  ##    ## ##   ###   ###
  ##   ##   ##  #### ####
  ##  ##     ## ## ### ##
  ##  ######### ##     ##
  ##  ##     ## ##     ##
  #### ##     ## ##     ##

  CodeBuildServiceRoleDev:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodeBuildLogs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/<app_name>-dev"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/<app_name>-dev:*"
        - PolicyName: CodeBuildArtifactsBucketDev
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Resource:
                  - !Sub "arn:aws:s3:::${BuildArtifactsBucketDev}/*"
        - PolicyName: CodeBuildParameterStore
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "ssm:GetParameters"
                Resource: "*"

  CodeBuildServiceRoleProd:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodeBuildLogs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/<app_name>-prod"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/<app_name>-prod:*"
        - PolicyName: CodeBuildArtifactsBucketProd
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Resource:
                  - !Sub "arn:aws:s3:::${BuildArtifactsBucketProd}/*"
        - PolicyName: CodeBuildParameterStore
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "ssm:GetParameters"
                Resource: "*"

  CloudFormationExecutionRoleDev:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Action: "sts:AssumeRole"
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"

  CloudFormationExecutionRoleProd:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Action: "sts:AssumeRole"
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"

  CodePipelineExecutionRoleDev:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                  - "lambda:InvokeFunction"
                  - "lambda:ListFunctions"
                  - "lambda:InvokeAsyc"
                Resource: "*"
        - PolicyName: CodePipelineCodeAndArtifactsS3Bucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "s3:*"
                Resource: !Sub "arn:aws:s3:::${BuildArtifactsBucketDev}/*"
        - PolicyName: CodePipelineCodeBuildAndCloudformationAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource:
                  - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${CodeBuildProjectDev}"
              - Effect: Allow
                Action:
                  - "cloudformation:CreateStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:ValidateTemplate"
                Resource:
                  - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/<app_name>-Dev*/*"
                  - !Sub "arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31"

  CodePipelineExecutionRoleProd:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                  - "lambda:InvokeFunction"
                  - "lambda:ListFunctions"
                  - "lambda:InvokeAsyc"
                Resource: "*"
        - PolicyName: CodePipelineCodeAndArtifactsS3Bucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "s3:*"
                Resource: !Sub "arn:aws:s3:::${BuildArtifactsBucketProd}/*"
        - PolicyName: CodePipelineCodeBuildAndCloudformationAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource:
                  - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${CodeBuildProjectProd}"
              - Effect: Allow
                Action:
                  - "cloudformation:CreateStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:ValidateTemplate"
                Resource:
                  - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/<app_name>-Prod*/*"
                  - !Sub "arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31"

Outputs:
  GitHubRepositoryHttpUrl:
    Description: GitHub Git repository
    Value: !Sub https://github.com/${GithubUser}/${GithubRepo}.git

  GitHubRepositorySshUrl:
    Description: GitHub Git repository
    Value: !Sub git@github.com:${GithubUser}/${GithubRepo}.git
  # BuildArtifactS3Bucket:
  #   Description: Amazon S3 Bucket for Pipeline and Build artifacts
  #   Value: !Ref BuildArtifactsBucket
  # CodeBuildProject:
  #   Description: CodeBuild Project name
  #   Value: !Ref CodeBuildProject
  # CodePipeline:
  #   Description: AWS CodePipeline pipeline name
  #   Value: !Ref Pipeline
  # CodeBuildIAMRole:
  #   Description: CodeBuild IAM Role
  #   Value: !GetAtt CodeBuildServiceRole.Arn
  # CloudformationIAMRole:
  #   Description: Cloudformation IAM Role
  #   Value: !GetAtt CloudFormationExecutionRole.Arn
  # CodePipelineIAMRole:
  #   Description: CodePipeline IAM Role
  #   Value: !GetAtt CodePipelineExecutionRole.Arn
